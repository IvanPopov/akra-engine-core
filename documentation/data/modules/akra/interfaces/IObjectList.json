{ "location" : "akra",
"variables" : { "public" : { "length" : { "location" : "akra.IObjectList",
"type" : "number"},
"first" : { "location" : "akra.IObjectList",
"type" : "any"},
"last" : { "location" : "akra.IObjectList",
"type" : "any"},
"current" : { "location" : "akra.IObjectList",
"type" : "any"}}},
"functions" : { "lock" : { "comments" : [ [ "/** Lock list for midifications. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [  ],
"type" : "void",
"isInline" : false},
"unlock" : { "comments" : [ [ "/** Unlock list */" ] ],
"location" : "akra.IObjectList",
"arguments" : [  ],
"type" : "void",
"isInline" : false},
"isLocked" : { "comments" : [ [ "/** Is list locked ? */" ] ],
"location" : "akra.IObjectList",
"arguments" : [  ],
"type" : "bool",
"isInline" : false},
"seek" : { "comments" : [ [ "/** Set current element to <n> position. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "n",
"isOptional" : true,
"type" : "number"} ],
"type" : "IObjectList",
"isInline" : false},
"next" : { "comments" : [ [ "/** Get next element */" ] ],
"location" : "akra.IObjectList",
"arguments" : [  ],
"type" : "any",
"isInline" : false},
"prev" : { "comments" : [ [ "/** Get prev element */" ] ],
"location" : "akra.IObjectList",
"arguments" : [  ],
"type" : "any",
"isInline" : false},
"push" : { "comments" : [ [ "/** Push element to end of list. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "element",
"isOptional" : false,
"type" : "any"} ],
"type" : "IObjectList",
"isInline" : false},
"pop" : { "comments" : [ [ "/** Pop element from end of list. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [  ],
"type" : "any",
"isInline" : false},
"prepend" : { "comments" : [ [ "/** Add element to list head. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "element",
"isOptional" : false,
"type" : "any"} ],
"type" : "IObjectList",
"isInline" : false},
"fromArray" : { "comments" : [ [ "/** Add element from array. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "elements",
"isOptional" : false,
"type" : "[  ]"},
{ "name" : "iOffset",
"isOptional" : true,
"type" : "number"},
{ "name" : "iSize",
"isOptional" : true,
"type" : "number"} ],
"type" : "IObjectList",
"isInline" : false},
"insert" : { "comments" : [ [ "/** Insert element before <n> element. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "n",
"isOptional" : false,
"type" : "number"},
{ "name" : "data",
"isOptional" : false,
"type" : "any"} ],
"type" : "IObjectList",
"isInline" : false},
"value" : { "comments" : [ [ "/** Get valuie of <n> element */" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "n",
"isOptional" : false,
"type" : "number"},
{ "name" : "defaultValue",
"isOptional" : true,
"type" : "any"} ],
"type" : "any",
"isInline" : false},
"indexOf" : { "comments" : [ [ "/** Get index of element with given data */" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "element",
"isOptional" : false,
"type" : "any"},
{ "name" : "from",
"isOptional" : true,
"type" : "number"} ],
"type" : "number",
"isInline" : false},
"mid" : { "comments" : [ [ "/** Get sub list from this list */" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "pos",
"isOptional" : true,
"type" : "number"},
{ "name" : "size",
"isOptional" : true,
"type" : "number"} ],
"type" : "IObjectList",
"isInline" : false},
"slice" : { "comments" : [ [ "/** slice from array */" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "start",
"isOptional" : true,
"type" : "number"},
{ "name" : "end",
"isOptional" : true,
"type" : "number"} ],
"type" : "IObjectList",
"isInline" : false},
"move" : { "comments" : [ [ "/** Move element from <from> postion to <to> position.*/" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "from",
"isOptional" : false,
"type" : "number"},
{ "name" : "to",
"isOptional" : false,
"type" : "number"} ],
"type" : "IObjectList",
"isInline" : false},
"replace" : { "comments" : [ [ "/** Replace data of <n> element. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "pos",
"isOptional" : false,
"type" : "number"},
{ "name" : "value",
"isOptional" : false,
"type" : "any"} ],
"type" : "IObjectList",
"isInline" : false},
"erase" : { "comments" : [ [ "/** Erase elements from begin to end. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "begin",
"isOptional" : false,
"type" : "number"},
{ "name" : "end",
"isOptional" : false,
"type" : "number"} ],
"type" : "IObjectList",
"isInline" : false},
"contains" : { "comments" : [ [ "/** Is list contains data with <value>?*/" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "value",
"isOptional" : false,
"type" : "any"} ],
"type" : "bool",
"isInline" : false},
"takeAt" : { "comments" : [ [ "/** Get data of <n> item and remove it. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "pos",
"isOptional" : false,
"type" : "number"} ],
"type" : "any",
"isInline" : false},
"takeFirst" : { "comments" : [ [ "/** Get data of first item and remove it. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [  ],
"type" : "any",
"isInline" : false},
"takeLast" : { "comments" : [ [ "/** Get data of last item and remove it. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [  ],
"type" : "any",
"isInline" : false},
"takeCurrent" : { "comments" : [ [ "/** Get data of current item and remove it. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [  ],
"type" : "any",
"isInline" : false},
"removeAt" : { "comments" : [ [ "/** Remove <n> item. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "n",
"isOptional" : false,
"type" : "number"} ],
"type" : "void",
"isInline" : false},
"removeOne" : { "comments" : [ [ "/** Remove one lement with data <element>. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "element",
"isOptional" : false,
"type" : "any"} ],
"type" : "void",
"isInline" : false},
"removeAll" : { "comments" : [ [ "/** Remove all lement with data <element>. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "element",
"isOptional" : false,
"type" : "any"} ],
"type" : "number",
"isInline" : false},
"swap" : { "comments" : [ [ "/** Swap items. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "i",
"isOptional" : false,
"type" : "number"},
{ "name" : "j",
"isOptional" : false,
"type" : "number"} ],
"type" : "IObjectList",
"isInline" : false},
"add" : { "comments" : [ [ "/** Add another list to this */" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "list",
"isOptional" : false,
"type" : "IObjectList"} ],
"type" : "IObjectList",
"isInline" : false},
"isEqual" : { "comments" : [ [ "/** Is this list equal to <list>. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "list",
"isOptional" : false,
"type" : "IObjectList"} ],
"type" : "bool",
"isInline" : false},
"clear" : { "comments" : [ [ "/** Clear list. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [  ],
"type" : "IObjectList",
"isInline" : false},
"forEach" : { "comments" : [ [ "/** For each loop. */" ] ],
"location" : "akra.IObjectList",
"arguments" : [ { "name" : "fn",
"isOptional" : false,
"type" : "IListExplorerFunc"} ],
"type" : "void",
"isInline" : false}}}