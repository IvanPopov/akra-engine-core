{ "location" : "akra",
"variables" : { "public" : { "rgba" : { "location" : "akra.IColor",
"type" : "uint"},
"argb" : { "location" : "akra.IColor",
"type" : "uint"},
"bgra" : { "location" : "akra.IColor",
"type" : "uint"},
"abgr" : { "location" : "akra.IColor",
"type" : "uint"},
"html" : { "location" : "akra.IColor",
"type" : "string"},
"htmlRgba" : { "location" : "akra.IColor",
"type" : "string"}}},
"functions" : { "set" : { "comments" : [  ],
"location" : "akra.IColor",
"arguments" : [ { "name" : "fGray",
"isOptional" : false,
"type" : "float"},
{ "name" : "fAlpha",
"isOptional" : false,
"type" : "float"} ],
"type" : "akra.IColor",
"isInline" : false},
"saturate" : { "comments" : [ [ "/** Clamps colour value to the range [ 0,
 1 ].",
"*/" ] ],
"location" : "akra.IColor",
"arguments" : [  ],
"type" : "void",
"isInline" : false},
"saturateCopy" : { "comments" : [ [ "/** As saturate,
 except that this colour value is unaffected and",
"the saturated colour value is returned as a copy. */" ] ],
"location" : "akra.IColor",
"arguments" : [  ],
"type" : "akra.IColor",
"isInline" : false},
"add" : { "comments" : [  ],
"location" : "akra.IColor",
"arguments" : [ { "name" : "cColor",
"isOptional" : false,
"type" : "akra.IColor"},
{ "name" : "ppDest",
"isOptional" : true,
"type" : "akra.IColor"} ],
"type" : "akra.IColor",
"isInline" : false},
"subtract" : { "comments" : [  ],
"location" : "akra.IColor",
"arguments" : [ { "name" : "cColor",
"isOptional" : false,
"type" : "akra.IColor"},
{ "name" : "ppDest",
"isOptional" : true,
"type" : "akra.IColor"} ],
"type" : "akra.IColor",
"isInline" : false},
"multiply" : { "comments" : [  ],
"location" : "akra.IColor",
"arguments" : [ { "name" : "fScalar",
"isOptional" : false,
"type" : "float"},
{ "name" : "ppDest",
"isOptional" : true,
"type" : "akra.IColor"} ],
"type" : "akra.IColor",
"isInline" : false},
"divide" : { "comments" : [  ],
"location" : "akra.IColor",
"arguments" : [ { "name" : "fScalar",
"isOptional" : false,
"type" : "float"},
{ "name" : "ppDest",
"isOptional" : true,
"type" : "akra.IColor"} ],
"type" : "akra.IColor",
"isInline" : false},
"setHSB" : { "comments" : [ [ "/** Set a colour value from Hue,
 Saturation and Brightness.",
"@param hue Hue value,
 scaled to the [ 0,
1 ] range as opposed to the 0-360",
"@param saturation Saturation level,
 [ 0,
1 ]",
"@param brightness Brightness level,
 [ 0,
1 ]",
"*/" ] ],
"location" : "akra.IColor",
"arguments" : [ { "name" : "fHue",
"isOptional" : false,
"type" : "float"},
{ "name" : "fSaturation",
"isOptional" : false,
"type" : "float"},
{ "name" : "fBrightness",
"isOptional" : false,
"type" : "float"} ],
"type" : "akra.IColor",
"isInline" : false},
"getHSB" : { "comments" : [ [ "/** Convert the current colour to Hue,
 Saturation and Brightness values.",
"@param hue Output hue value,
 scaled to the [ 0,
1 ] range as opposed to the 0-360",
"@param saturation Output saturation level,
 [ 0,
1 ]",
"@param brightness Output brightness level,
 [ 0,
1 ]",
"*/" ] ],
"location" : "akra.IColor",
"arguments" : [ { "name" : "pHsb",
"isOptional" : true,
"type" : "float"} ],
"type" : "float",
"isInline" : false},
"toString" : { "comments" : [  ],
"location" : "akra.IColor",
"arguments" : [  ],
"type" : "string",
"isInline" : false}}}