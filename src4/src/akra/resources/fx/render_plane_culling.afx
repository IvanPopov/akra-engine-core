provide akra.system;

//float4x4 proj_mat:PROJ_MATRIX;
//float4x4 view_mat:VIEW_MATRIX;
float4x4 worldMat:INV_VIEW_CAMERA_MAT;

bool isReflected : MESH_IS_CULLED_BY_PLANE = true;
float4 cullingPlane : MESH_CULLING_PLANE = float4(0.,1.,0.,0.);

void discardPixel(float3 vert: VERTEX) {
	if(isReflected) {
		float4 real_vert = worldMat * float4(vert,1);
		float4 real_forward = worldMat * float4(0.,0.,1.,0.);
		real_vert /= real_vert.w;

	    if(dot(cullingPlane.xyz, real_vert.xyz) < cullingPlane.w+0.001) {
	        discard;
	    }
	}
}

technique render_plane_culling {
    pass p0 {
        PixelShader = compile discardPixel();
    }
}
